name: Publish package to the Maven Central Repository

on:
  push:
    branches:
      - master
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"
      - name: Set versions for release
        run: mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false
      - name: Publish package
        run: mvn --batch-mode deploy -Psign
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - name: Grab release version
        run: echo "::set-output name=MVNVERSION::$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)"
        id: releaseversion
      - name: Print Release Version
        run: "echo 'Release Version: ${{steps.releaseversion.outputs.MVNVERSION}}'"
      - name: Tag Release
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.releaseversion.outputs.MVNVERSION }}
      - name: Bump Versions and add SNAPSHOT
        id: bump
        run: mvn --batch-mode release:update-versions
      - name: Grab new version
        run: echo "::set-output name=MVNVERSION::$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)"
        id: mvnversion
      - name: Print Version
        run: "echo 'New Version: ${{steps.mvnversion.outputs.MVNVERSION}}'"
      - name: Find and Replace ReadMe versions
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "<version>.*</version>"
          replace: "<version>${{steps.releaseversion.outputs.MVNVERSION}}</version>"
          include: "README.md"
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "Updating maven dev version: ${{steps.mvnversion.outputs.MVNVERSION}}, and updating ReadMe files with latest released version."
